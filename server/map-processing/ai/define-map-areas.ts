import "jsr:@std/dotenv/load";
import { generateObject } from "ai";
import { z } from "zod";
import { openai } from "@ai-sdk/openai";
import { MapArea, MapAreaSchema } from "@/types/ai/MapAreas.ts";
import { MapDataPreAI } from "@/map-processing/types/MapDataPreAI.ts";

const systemMessage = `You are an expert in Fire Emblem map design and analysis.
Given a terrain grid and a description of the map, your task is to divide the map into Areas.

Each Area is a distinct section of the map (e.g., a town area, a field, treasure room, hallway to throne room, etc).
If it is an indoor map, each area should be rooms, hallways, etc.
If it is an outdoor map, each area should be distinct sections of the map.
If it is a mixed indoor/outdoor map, you will know what's indoor or outdoor by the tiles. If you see floor, it's indoor. Plains, sand, etc are outdoor.

Areas should be small, self-contained areas. Each map should have 4-8 Areas.

The terrain grid will give you terrain tiles from Fire Emblem 8. This means that stairways are common points for enemy reinforcements, forts give extra defense and healing, etc.

`;

export default async function defineMapAreas(
  mapData: MapDataPreAI
): Promise<{ description: string; areas: MapArea[] }> {
  const { object } = await generateObject({
    model: openai("gpt-4o"),
    system: systemMessage,
    messages: [
      {
        role: "user",
        content: [
          {
            type: "text",
            text: JSON.stringify(mapData, null, 2),
          },
          {
            type: "image",
            image: new URL(
              "https://github.com/Klokinator/FE-Repo/blob/main/Maps/Map%20Pack%20Knights%20%7BAura%20Wolf%7D%20(13)/Knights%20Villagers%20Bandits%2010%20(3C%2000%20CE%203E).png?raw=true"
            ),
          },
        ],
      },
    ],
    schema: z.object({
      description: z
        .string()
        .describe("1 sentence text overview/Description of the map"),
      areas: z.array(MapAreaSchema),
    }),
  });

  return object;
}

if (import.meta.main) {
  const mapData: MapDataPreAI = {
    width: 20,
    height: 18,
    terrainGrid: [
      [
        "Floor",
        "Floor",
        "Floor",
        "Wall",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Pillar",
        "Floor",
        "Floor",
        "Stairs",
        "Plains",
        "Plains",
        "Forest",
      ],
      [
        "Floor",
        "Chest",
        "Floor",
        "Wall",
        "Floor",
        "Pillar",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Pillar",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Stairs",
        "Road",
        "Plains",
        "Plains",
      ],
      [
        "Floor",
        "Floor",
        "Floor",
        "Wall",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Stairs",
        "Plains",
        "Road",
        "Plains",
      ],
      [
        "Wall",
        "Wall",
        "Wall",
        "Wall",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Stairs",
        "Wall",
        "Wall",
        "Wall",
        "Wall",
        "Plains",
        "Plains",
        "Plains",
      ],
      [
        "Wall",
        "Wall",
        "Wall",
        "Wall",
        "Wall",
        "Wall",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Wall",
        "Wall",
        "Wall",
        "Wall",
        "Wall",
        "Wall",
        "Plains",
        "Plains",
        "Plains",
      ],
      [
        "Plains",
        "Plains",
        "Plains",
        "Wall",
        "Wall",
        "Wall",
        "Wall",
        "Brace",
        "Floor",
        "Brace",
        "Wall",
        "Wall",
        "Wall",
        "Wall",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Road",
        "Road",
      ],
      [
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Wall",
        "Wall",
        "Brace",
        "Stairs",
        "Brace",
        "Wall",
        "Wall",
        "Plains",
        "Plains",
        "Plains",
        "Forest",
        "Plains",
        "Sand",
        "Plains",
        "Forest",
      ],
      [
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Forest",
        "Plains",
        "Plains",
        "Plains",
        "Road",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Forest",
        "Plains",
        "Plains",
        "Road",
        "Plains",
        "Plains",
        "Plains",
      ],
      [
        "Wall",
        "Plains",
        "Forest",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Road",
        "Road",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Wall",
        "Wall",
        "Wall",
      ],
      [
        "Wall",
        "Plains",
        "Plains",
        "Forest",
        "Plains",
        "Road",
        "Road",
        "Plains",
        "Plains",
        "Forest",
        "Plains",
        "Plains",
        "Road",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Wall",
        "Floor",
        "Floor",
      ],
      [
        "Wall",
        "Wall",
        "Wall",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Forest",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Wall",
        "Floor",
        "Chest",
      ],
      [
        "Floor",
        "Stairs",
        "Wall",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Hill",
        "Hill",
        "Plains",
        "Forest",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Wall",
        "Floor",
        "Floor",
      ],
      [
        "Floor",
        "Floor",
        "Wall",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Forest",
        "Plains",
        "Plains",
        "Forest",
        "Plains",
        "Plains",
        "Plains",
        "Wall",
        "Wall",
        "Wall",
        "Wall",
        "Door",
      ],
      [
        "Floor",
        "Floor",
        "Wall",
        "Wall",
        "Plains",
        "Forest",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Wall",
        "Wall",
        "Wall",
        "Wall",
        "Stairs",
        "Floor",
        "Floor",
        "Floor",
      ],
      [
        "Floor",
        "Pillar",
        "Floor",
        "Wall",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Wall",
        "Wall",
        "Wall",
        "Wall",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
      ],
      [
        "Floor",
        "Floor",
        "Floor",
        "Wall",
        "Plains",
        "Plains",
        "Road",
        "Road",
        "Plains",
        "Wall",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Pillar",
        "Floor",
        "Floor",
        "Floor",
        "Pillar",
        "Floor",
      ],
      [
        "Pillar",
        "Floor",
        "Floor",
        "Wall",
        "Road",
        "Plains",
        "Plains",
        "Road",
        "Road",
        "Stairs",
        "Floor",
        "Floor",
        "Pillar",
        "Floor",
        "Floor",
        "Floor",
        "Pillar",
        "Floor",
        "Floor",
        "Floor",
      ],
      [
        "Floor",
        "Floor",
        "Floor",
        "Stairs",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Plains",
        "Stairs",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
        "Floor",
      ],
    ],
    pointsOfInterest: [
      {
        x: 16,
        y: 0,
        type: "Stairs",
      },
      {
        x: 1,
        y: 1,
        type: "Chest",
      },
      {
        x: 16,
        y: 1,
        type: "Stairs",
      },
      {
        x: 16,
        y: 2,
        type: "Stairs",
      },
      {
        x: 12,
        y: 3,
        type: "Stairs",
      },
      {
        x: 8,
        y: 6,
        type: "Stairs",
      },
      {
        x: 19,
        y: 10,
        type: "Chest",
      },
      {
        x: 1,
        y: 11,
        type: "Stairs",
      },
      {
        x: 16,
        y: 13,
        type: "Stairs",
      },
      {
        x: 9,
        y: 16,
        type: "Stairs",
      },
      {
        x: 3,
        y: 17,
        type: "Stairs",
      },
      {
        x: 9,
        y: 17,
        type: "Stairs",
      },
    ],
    mapName: "Knights-Villagers-Bandits-10-3C-00-CE-3E",
    tmx: '<?xml version="1.0" encoding="UTF-8"?>\n<map version="1.0" orientation="orthogonal" renderorder="right-down" width="20" height="18" tilewidth="16" tileheight="16" nextobjectid="1">\n <tileset firstgid="1" name="3C00CE3E" tilewidth="16" tileheight="16">\n  <image source="Tilesets/3C00CE3E.png" width="512" height="512"/>\n </tileset>\n <layer name="Main" width="20" height="18">\n  <properties>\n   <property name="Main" value=""/>\n   <property name="Anims" value="_3CAnims"/>\n   <property name="ChapterID" value="<CHAPTERID>"/>\n   <property name="MapChangesID" value="Knights-Villagers-Bandits-10-3C-00-CE-3E_Changes"/>\n   <property name="MapID" value="Knights-Villagers-Bandits-10-3C-00-CE-3E_Map"/>\n   <property name="ObjectType" value="0x3C"/>\n   <property name="PaletteID" value="0xCE"/>\n   <property name="TileConfig" value="0x3E"/>\n  </properties>\n  <data encoding="base64" compression="zlib">\n   eJx1lMFLVFEUxs97jzCLBGtW+QckaRBaqW0NMkQj0H9AR4KUrKi/oBQEEWzZNhujGNFZuosZUqioBqJNW1G0shFXtun7uN/l3l60+HHmnnfOd885994pZGZnxKnUrAHq4AAsghHwVGvv/xTFlRKzj2bWD2qgFTpjsu/w7bPiaUfBA/BIud7/CxxKexs5X2ALsO+lw9pOS68Rxcd6B5G/HtVLvW3ofMXvn7Cvk8AJ7e9j18BDUIk0lhDXnIacFTAMnRuqrwPfTqbOliPdRq4OWq9Djc4o7y50mpkHpi2Q193SPGkrOZ0mxL8EK2ADrMPXhpkNIKYFXIOvnNM9BmqJs76Pe5FOTVojiBmHrYI9cA7rOmxRMWXFf7Bwdi3qZT5xeRPgJjiLmnZ0X+jjrIalMy6NTTCrmZwHF0A3eJa6c+TeQ+AVeGx/nw/vyCp8z1XvD82CuZfw7bv8/M57wRkN8jzBLdVAjYLuXXymrJOxC2BfOv2aw4RyWc99cAdMmZs79fy7uJq5O+XrnOM8wYDyZ8BbsCVN7jEpraK+ez3Wx7d5JQt6t6Pz87Mvap5V5bOmpdzcyJvEvaUe9e17rupceBZP1CP7Ltm/b4O9sce+zNmK3nlvVGNJZ8v3+MLCjL1GbxY02FtPzl4Eo2AvcW9nQ/fud+rqO56G/b0Ga7gcafh17G/H7yOwa+6+UfMbWE7C/j7e15Bfe8t4/vfwzl03N0fet67E6eV7+d/6D92xtrA=\n  </data>\n </layer>\n <layer name="Broken_Wall" width="20" height="18" visible="0">\n  <properties>\n   <property name="Height" value="1"/>\n   <property name="ID" value="0"/>\n   <property name="Width" value="2"/>\n   <property name="X" value="3"/>\n   <property name="Y" value="0"/>\n  </properties>\n  <data encoding="base64" compression="zlib">\n   eJxjYEAAYWYGhk9MDKNgFIyCUTAKBgEAAM3eAQs=\n  </data>\n </layer>\n <layer name="Left Chest" width="20" height="18" visible="0">\n  <properties>\n   <property name="Height" value="1"/>\n   <property name="ID" value="1"/>\n   <property name="Width" value="1"/>\n   <property name="X" value="1"/>\n   <property name="Y" value="1"/>\n  </properties>\n  <data encoding="base64" compression="zlib">\n   eJxjYKA+cKKBmaNgFIyCUTDSAABjRwBD\n  </data>\n </layer>\n <layer name="Right Chest" width="20" height="18" visible="0">\n  <properties>\n   <property name="Height" value="1"/>\n   <property name="ID" value="2"/>\n   <property name="Width" value="1"/>\n   <property name="X" value="19"/>\n   <property name="Y" value="10"/>\n  </properties>\n  <data encoding="base64" compression="zlib">\n   eJxjYBgFo2AU0AM4DbQDRsGQAwCXCABD\n  </data>\n </layer>\n <layer name="Door" width="20" height="18" visible="0">\n  <properties>\n   <property name="Height" value="2"/>\n   <property name="ID" value="3"/>\n   <property name="Width" value="2"/>\n   <property name="X" value="18"/>\n   <property name="Y" value="12"/>\n  </properties>\n  <data encoding="base64" compression="zlib">\n   eJxjYBgFo2AUjHSwjpGBQZCZeuZZAs0yo6J5IxUAANEhATk=\n  </data>\n </layer>\n</map>\n',
  };
  const res = await defineMapAreas(mapData);
  console.log("res", JSON.stringify(res, null, 2));
}

